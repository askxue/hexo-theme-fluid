#---------------------------
# 全局主题配置
#---------------------------

# 用于浏览器标签的图标
favicon: https://img.xue65535.cn/img/2022/01/22/3740c7f9597f720a22aa81e23541e843-0ba39fe9.png

# 用于苹果设备的图标
apple_touch_icon: https://img.xue65535.cn/img/2022/01/22/3740c7f9597f720a22aa81e23541e843-0ba39fe9.png

# 浏览器标签页中的标题分隔符，效果： 文章名 - 站点名
tab_title_separator: " - "

# 强制所有链接升级为 HTTPS（适用于图片等资源出现 HTTP 混入报错）
force_https: false

# 代码块的增强配置
code:
  # 是否开启复制代码的按钮
  copy_btn: true
  # 代码高亮
  highlight:
    enable: true
    # 代码块是否显示行号
    line_number: true
    # 实现高亮的库，对应下面的设置  Options: highlightjs | prismjs
    lib: "highlightjs"

    highlightjs:
      # 在链接中挑选 style 填入 See: https://highlightjs.org/static/demo/
      style: "Github Gist"
      # 是否根据 style 改变代码背景色（如果 style 是深色背景别忘了开启此项）
      bg_color: false

    prismjs:
      # 在下方链接页面右侧的圆形按钮挑选 style 填入，也可以直接填入 css 链接  See: https://prismjs.com/
      style: "default"
      # 设为 true 高亮将本地静态生成（并只支持部分 prismjs 插件），设为 false 高亮将在浏览器通过 js 生成
      preprocess: true

# 一些好玩的功能
fun_features:
  # 为 subtitle 添加打字机效果
  typing:
    enable: true
    # 打印速度，数字越大越慢
    typeSpeed: 120
    # 游标字符
    cursorChar: "_"
    # 是否循环播放效果
    loop: false

  # 为文章内容中的标题添加锚图标
  anchorjs:
    enable: true
    element: h1,h2,h3,h4,h5,h6
    placement: right
    # Options: hover | always | touch
    visible: hover
    # Option：§ | # | ❡
    icon: ""

  # 加载进度条
  progressbar:
    enable: true
    height_px: 3
    color: "#29d"
    # See: https://github.com/rstacruz/nprogress
    options: { showSpinner: false, trickleSpeed: 100 }

# 主题暗色模式，开启后菜单中会出现切换按钮，用户浏览器会存储切换选项，并且会遵循 prefers-color-scheme 自动切换
dark_mode:
  enable: true
  # 默认的选项（当用户手动切换后则不再按照默认模式），选择 `auto` 会优先遵循 prefers-color-scheme，其次按用户本地时间 18 点到次日 6 点之间进入暗色模式
  default: auto

# 主题颜色配置，其他不生效的地方请使用自定义 css 解决，配色可以在下方链接中获得启发
# See: https://www.webdesignrankings.com/resources/lolcolors/
color:
  # body 背景色
  body_bg_color: "#eee"
  # 暗色模式下的 body 背景色，下同
  body_bg_color_dark: "#181c27"

  # 顶部菜单背景色
  navbar_bg_color: "#2f4154"
  navbar_bg_color_dark: "#1f3144"

  # 顶部菜单字体色
  navbar_text_color: "#fff"
  navbar_text_color_dark: "#d0d0d0"

  # 全局字体色
  text_color: "#3c4858"
  text_color_dark: "#c4c6c9"

  # 全局次级字体色（摘要、简介等位置）
  sec_text_color: "#718096"
  sec_text_color_dark: "#a7a9ad"

  # 文章正文字体色
  post_text_color: "#2c3e50"
  post_text_color_dark: "#c4c6c9"

  # 文章正文字体色（h1 h2 h3...）
  post_heading_color: "#1a202c"
  post_heading_color_dark: "#c4c6c9"

  # 文章超链接字体色
  post_link_color: "#0366d6"
  post_link_color_dark: "#1589e9"

  # 超链接悬浮时字体色
  link_hover_color: "#30a9de"
  link_hover_color_dark: "#30a9de"

  # 超链接悬浮背景色
  link_hover_bg_color: "#f8f9fa"
  link_hover_bg_color_dark: "#364151"

  # 主面板背景色
  board_color: "#fff"
  board_color_dark: "#252d38"

# 主题字体配置
font:
  font_size: 16px
  font_family:
  letter_spacing: 0.02em
  code_font_size: 85%

# 指定自定义 .js 文件路径，支持列表；路径是相对 source 目录，如 /js/custom.js 对应存放目录 source/js/custom.js
custom_js:

# 指定自定义 .css 文件路径，用法和 custom_js 相同
custom_css:
  - /asset/css/custom.css
  - //at.alicdn.com/t/font_2953613_1ng4p1swo9n.css    # aliyun iconfont 自定义图标，每次新增图标都要重新去官网生成url

# 自定义 <head> 节点中的 HTML 内容
custom_head: ''

# 自定义底部 HTML 内容（位于 footer 上方），注意不要和 `post: custom` 配置冲突
custom_html: ''

# 网页访问统计
web_analytics: # 网页访问统计
  enable: false

  # 百度统计的 Key，值需要获取下方链接中 `hm.js?` 后边的字符串
  # See: https://tongji.baidu.com/sc-web/10000033910/home/site/getjs?siteId=13751376
  baidu:

  # Google 统计的 Tracking ID
  # See: https://developers.google.com/analytics/devguides/collection/analyticsjs
  google:

  # Google gtag.js 的媒体资源 ID
  # See: https://developers.google.com/analytics/devguides/collection/gtagjs/
  gtag:

  # 腾讯统计的 H5 App ID，开启高级功能才有cid
  # See: https://mta.qq.com/h5/manage/ctr_app_manage
  tencent:
    sid:
    cid:

  # 51.la 站点统计 ID
  # See: https://www.51.la/user/site/index
  woyaola:  # 51.la 站点统计 ID，参见

  # 友盟/cnzz 站点统计 web_id
  # See: https://web.umeng.com/main.php?c=site&a=show
  cnzz:

  # LeanCloud 计数统计，可用于 PV UV 展示，如果 `web_analytics: enable` 没有开启，PV UV 展示只会查询不会增加
  leancloud:
    app_id:
    app_key:
    # REST API 服务器地址，国际版不填
    server_url:
    # 统计页面时获取路径的属性
    path: window.location.pathname

# 对页面中的图片和评论插件进行懒加载处理，可见范围外的元素不会提前加载
lazyload:
  enable: true
  # 加载时的占位图片
  loading_img: /img/loading.gif
  # 开启后懒加载仅在文章页生效，如果自定义页面需要使用，可以在 Front-matter 里指定 `lazyload: true`
  onlypost: false

  # 触发加载的偏移倍数，基数是视窗高度，可根据部署环境的请求速度调节
  offset_factor: 2

# 图标库，包含了大量社交类图标，主题依赖的不包含在内，因此可自行修改，详见 https://hexo.fluid-dev.com/docs/icon/
iconfont: //at.alicdn.com/t/font_1736178_kmeydafke9r.css


#---------------------------
# 页头
# Header
#---------------------------

# 导航栏的相关配置
navbar:
  # 导航栏左侧的标题，为空则按 hexo config 中 `title` 显示
  blog_title: ""

  # 导航栏毛玻璃特效，实验性功能，可能会造成页面滚动掉帧和抖动，部分浏览器不支持会自动不生效
  ground_glass:
    enable: true
    # 模糊像素，只能为数字，数字越大模糊度越高
    px: 3
    # 不透明度，数字越大透明度越低，注意透明过度可能看不清菜单字体
    # available: 0 - 1.0
    alpha: 0.7

  # 导航栏菜单，可自行增减，key 用来关联 languages/*.yml，如不存在关联则显示 key 本身的值；icon 是 css class，可以省略；增加 name 可以强制显示指定名称
  menu:
    - { name: "Home", link: "/", icon: "iconfont icon-home-fill" }
    - {
      name: 'Java',
      icon: 'iconfont icon-java',
      submenu: [
        { name: '基础', link: '/tags/基础' },
        { name: '集合', link: '/tags/集合' },
        { name: '并发编程', link: '/tags/并发编程' },
        { name: 'JVM', link: '/tags/JVM' }
      ]
    }
    - { name: '框架', link: '/tags/框架', icon: 'iconfont icon-kuangjiaguanli1' }
    - { name: '数据库', link: '/tags/数据库', icon: 'iconfont icon-shujuku' }
    - { name: '分布式', link: '/tags/分布式', icon: 'iconfont icon-1-2-1-fenbushi' }
    - { name: '教程',  link: '/tags/guides', icon: 'iconfont icon-bookmark' }
    - { name: '内功',  link: '/tags/内功', icon: 'iconfont icon-brush' }
    - {
      name: '归档',
      icon: 'iconfont icon-books',
      submenu: [
        { name: "汇总", link: "/archives/" },
        { name: "索引", link: "/tags/" }
      ]
    }
    - { name: "关于我", link: "/about/", icon: "iconfont icon-user-fill" }

# 搜索功能，基于 hexo-generator-search 插件，若已安装其他搜索插件请关闭此功能，以避免生成多余的索引文件
search:
  enable: true
  # 搜索索引文件的路径，可以是相对路径或外站的绝对路径
  path: /local-search.xml
  # 文件生成在本地的位置，必须是相对路径
  generate_path: /local-search.xml
  # 搜索的范围
  # Options: post | page | all
  field: post
  # 搜索是否扫描正文
  content: true

# 首屏图片的相关配置
banner:
  # 视差滚动，图片与板块会随着屏幕滚动产生视差效果
  parallax: true
  # 图片最小的宽高比，以免图片两边被过度裁剪，适用于移动端竖屏时，如需关闭设为 0
  width_height_ratio: 1.0
# 向下滚动的箭头
scroll_down_arrow:
  enable: true
  # 头图高度不小于指定比例，才显示箭头
  # Available: 0 - 100
  banner_height_limit: 80
  # 翻页后自动滚动
  scroll_after_turning_page: true
# 向顶部滚动的箭头
scroll_top_arrow:
  enable: true

# Open Graph metadata
# See: https://hexo.io/docs/helpers.html#open-graph
open_graph:
  twitter_card: summary_large_image
  twitter_id:
  twitter_site:
  google_plus:
  fb_admins:
  fb_app_id:

#---------------------------
# 页脚
# Footer
#---------------------------
footer:
  # 页脚第一行文字的 HTML
  content: '
  <p class="links_beian"><a href="https://beian.miit.gov.cn/#/Integrated/recordQuery">  湘ICP备2022000892号</a></p>
  '

  # 展示网站的 PV、UV 统计数
  statistics:
    enable: false

    # 统计数据来源，使用 leancloud 需要设置 `web_analytics: leancloud` 中的参数；使用 busuanzi 不需要额外设置，但是有时不稳定，另外本地运行时 busuanzi 显示统计数据很大属于正常现象，部署后会正常
    # Options: busuanzi | leancloud
    source: "busuanzi"

    # 页面显示的文本，{}是数字的占位符（必须包含)，下同
    pv_format: "总访问量 {} 次"
    uv_format: "总访客数 {} 人"

  # 国内大陆服务器的备案信息
  beian:
    enable: false
    # ICP证号
    icp_text: 京ICP证123456号
    # 公安备案号，不填则只显示ICP
    police_text: 京公网安备12345678号
    # 公安备案的编号，用于URL跳转查询
    police_code: 12345678
    # 公安备案的图片. 为空时不显示备案图片
    police_icon: /img/police_beian.png


#---------------------------
# 首页
# Home Page
#---------------------------
index:
  # 首页 Banner 头图，可以是相对路径或绝对路径，以下相同
  banner_img: https://img.xue65535.cn/img/2022/01/22/5d7c4cb6cb96937f12cc7ee4ffbfc3ae-a8c03f2f.jpeg
  # 头图高度，屏幕百分比
  # Available: 0 - 100
  banner_img_height: 100
  # 头图黑色蒙版的不透明度，available: 0 - 1.0， 1 是完全不透明
  # Available: 0 - 1.0
  banner_mask_alpha: 0.3

  # 首页副标题的独立设置
  slogan:
    enable: true
    # 为空则按 hexo config.subtitle 显示
    text: ""
    # 通过 API 接口作为首页副标题的内容，必须返回的是 JSON 格式，如果请求失败则按 text 字段显示，该功能必须先开启 typing 打字机功能
    api:
      enable: false
      # 请求地址
      url: ""
      # 请求方法
      # Available: GET | POST | PUT
      method: "GET"
      # 请求头
      headers: { }

  # 从请求结果获取字符串的取值字段，最终必须是一个字符串，例如返回结果为 {"data": {"author": "fluid", "content": "An elegant theme"}}, 则取值字段为 ['data', 'content']；如果返回是列表则自动选择第一项
  keys: [ ]

  # 自动截取文章摘要
  auto_excerpt:
    enable: true

  # 打开文章的标签方式
  # Available: _blank | _self
  post_url_target: _self

  # 是否显示文章信息（时间、分类、标签）
  post_meta:
    date: true
    category: true
    tag: true

  # 文章通过 sticky 排序后，在首页文章标题前显示图标
  post_sticky:
    enable: true
    icon: "iconfont icon-java"


#---------------------------
# 文章页
# Post Page
#---------------------------
post:
  banner_img: https://img.xue65535.cn/img/2022/01/22/4b8d15826e4a9151d8095504f2f8ce46-18cf70f6.jpeg
  banner_img_height: 70
  banner_mask_alpha: 0.3

  # 文章在首页的默认封面图，当没有指定 index_img 时会使用该图片，若两者都为空则不显示任何图片
  default_index_img: https://img.xue65535.cn/img/2022/01/22/cdd913f8537f1b426736b2da8da3da66-16107c85.jpg

  # 文章标题下方的元信息
  meta:
    # 作者，优先根据 front-matter 里 author 字段，其次是 hexo 配置中 author 值
    author:
      enable: false

    # 文章日期，优先根据 front-matter 里 date 字段，其次是 md 文件日期
    date:
      enable: true
      # 格式参照 ISO-8601 日期格式化
      # See: http://momentjs.cn/docs/#/parsing/string-format/
      format: "LL a"

    # 字数统计
    wordcount:
      enable: true
      # 显示的文本，{}是数字的占位符（必须包含)，下同
      format: "{} 字"

    # 估计阅读全文需要的时长
    min2read:
      enable: true
      format: "{} 分钟"
      # 每个字词的长度，建议：中文≈2，英文≈5
      awl: 2
      # 每分钟阅读字数
      wpm: 160

    # 浏览量计数
    views:
      enable: false
      # 统计数据来源
      # Options: busuanzi | leancloud
      source: "busuanzi"
      format: "{} 次"

  # 在文章开头显示文章更新时间，该时间默认是 md 文件更新时间，可通过 front-matter 中 `updated` 手动指定（和 date 一样格式）
  updated:
    enable: true
    # 描述文字
    content: 最后更新于：
    # 是否使用相对时间表示，比如："3 天前"
    relative: false

  # 文章右侧目录
  toc:
    enable: true
    # 目录会选择这些节点作为标题
    headingSelector: "h1,h2,h3,h4,h5,h6"
    # 层级的折叠深度，0 是全部折叠，大于 0 后如果存在下级标题则默认展开
    collapseDepth: 0

  # 版权声明，会显示在每篇文章的结尾
  copyright:
    enable: true
    content: '本博客所有文章除特别声明外，均采用 <a href="https://creativecommons.org/licenses/by-sa/4.0/deed.zh" rel="nofollow noopener">CC BY-SA 4.0 协议</a> ，转载请注明出处！'

  # 文章底部上一篇下一篇功能
  prev_next:
    enable: true

  # 文章底部自定义区域（位于 footer 上方），支持 HTML，可插入赞赏码、公众号这类内容内容
  custom:
    enable: false
    content: '<img src="https://octodex.github.com/images/jetpacktocat.png" class="rounded mx-auto d-block mt-5" style="width:150px; height:150px;">'

  # 文章图片可点击放大
  image_zoom:
    enable: true
    # 放大后图片链接替换规则，可用于将压缩图片链接替换为原图片链接，如 ['-slim', ''] 是将链接中 `-slim` 移除；如果想使用正则请使用 `re:` 前缀，如 ['re:\\d{3,4}\\/\\d{3,4}\\/', '']
    img_url_replace: [ '', '' ]

  # 脚注语法，会在文章底部生成脚注，如果 Markdown 渲染器本身支持，则建议关闭，否则可能会冲突
  footnote:
    enable: true
    # 脚注的节标题，也可以在 front-matter 中通过 `footnote: <h2>Reference</h2>` 这种形式修改单独页面的 header
    header: ''

  # 数学公式，开启之前需要更换 Markdown 渲染器，否则复杂公式会有兼容问题，具体请见：https://hexo.fluid-dev.com/docs/guide/##latex-数学公式
  math:
    # 开启后文章默认可用，自定义页面如需使用，需在 Front-matter 中指定 `math: true`
    enable: false
    # 开启后，只有在文章 Front-matter 里指定 `math: true` 才会在文章页启动公式转换，以便在页面不包含公式时提高加载速度
    specific: false
    # Options: mathjax | katex
    engine: mathjax

  # 流程图，基于 mermaid-js，具体请见：https://hexo.fluid-dev.com/docs/guide/#mermaid-流程图
  mermaid:
    # 开启后文章默认可用，自定义页面如需使用，需在 Front-matter 中指定 `mermaid: true`
    enable: false
    # 开启后，只有在文章 Front-matter 里指定 `mermaid: true` 才会在文章页启动公式转换，以便在页面不包含公式时提高加载速度
    specific: false
    # See: http://mermaid-js.github.io/mermaid/
    options: { theme: 'default' }

  # 评论插件
  comments:
    enable: false
    # 指定的插件，需要同时设置对应插件的必要参数
    # Options: utterances | disqus | gitalk | valine | waline | changyan | livere | remark42 | twikoo | cusdis
    type: disqus

#---------------------------
# 评论插件
#
# 开启评论需要先设置上方 `post: comments: enable: true`，然后根据 `type` 设置下方对应的评论插件参数
#---------------------------

# Utterances
# 基于 GitHub Issues
# See: https://utteranc.es
utterances:
  repo:
  issue_term: pathname
  label: utterances
  theme: github-light
  theme_dark: github-dark
  crossorigin: anonymous

# Disqus
# 基于第三方的服务，国内用户直接使用容易被墙，建议配合 Disqusjs
# See: https://disqus.com
disqus:
  shortname:
  # 以下为 Disqusjs 支持, 国内用户如果想使用 Disqus 建议配合使用
  # See: https://github.com/SukkaW/DisqusJS
  disqusjs: false
  apikey:

# Gitalk
# 基于 GitHub Issues
# See: https://github.com/gitalk/gitalk#options
gitalk:
  clientID:
  clientSecret:
  repo:
  owner:
  admin: [ 'name' ]
  language: zh-CN
  labels: [ 'Gitalk' ]
  perPage: 10
  pagerDirection: last
  distractionFreeMode: false
  createIssueManually: true
  # 默认 proxy 可能会失效，解决方法请见下方链接
  # The default proxy may be invalid, refer to the links for solutions
  # https://github.com/gitalk/gitalk/issues/429
  # https://github.com/Zibri/cloudflare-cors-anywhere
  proxy: https://cors-anywhere.azm.workers.dev/https://github.com/login/oauth/access_token

# Valine
# 基于 LeanCloud
# See: https://valine.js.org/
valine:
  appId:
  appKey:
  path: window.location.pathname
  placeholder:
  avatar: 'retro'
  meta: [ 'nick', 'mail', 'link' ]
  requiredFields: [ ]
  pageSize: 10
  lang: 'zh-CN'
  highlight: false
  recordIP: false
  serverURLs: ''
  emojiCDN:
  emojiMaps:
  enableQQ: false

# Waline
# 从 Valine 衍生而来，额外增加了服务端和多种功能
# See: https://waline.js.org/
waline:
  serverURL: ''
  path: window.location.pathname
  placeholder:
  meta: [ 'nick', 'mail', 'link' ]
  requiredMeta: [ 'nick' ]
  lang: 'zh-CN'
  emoji: [ 'https://cdn.jsdelivr.net/gh/walinejs/emojis/weibo' ]
  dark: 'html[data-user-color-scheme="dark"]'
  avatar: 'retro'
  avatarCDN: 'https://seccdn.libravatar.org/avatar/'
  avatarForce: false
  wordLimit: 0
  pageSize: 10
  highlight: true

# 畅言 Changyan
# 基于第三方的服务
# http://changyan.kuaizhan.com
changyan:
  appid: ''
  appkey: ''

# 来必力 Livere
# 基于第三方的服务
# See: https://www.livere.com
livere:
  uid: ''

# Remark42
# 需要自托管服务端
# See: https://remark42.com
remark42:
  host:
  site_id:
  max_shown_comments: 10
  locale: zh
  components: [ 'embed' ]

# Twikoo
# 基于腾讯云开发
# See: https://twikoo.js.org
twikoo:
  envId:
  region: ap-shanghai
  path: window.location.pathname

# Cusdis
# 基于第三方服务或自托管服务
# See https://cusdis.com
cusdis:
  host:
  app_id:
  lang: zh-cn

#---------------------------
# 归档页
# Archive Page
#---------------------------
archive:
  banner_img: https://img.xue65535.cn/img/2022/01/22/7c62008d6dba315a21e952a06f87ea0d-f20dc8b2.jpeg
  banner_img_height: 60
  banner_mask_alpha: 0.3
  subtitle: '千里之行，始于足下 —— 老子'


#---------------------------
# 分类页
# Category Page
#---------------------------
category:
  enable: true
  banner_img: https://img.xue65535.cn/img/2022/01/22/b17dd0115c401cc8b19ad0d4c92fd5ab-e51f38c5.jpeg
  banner_img_height: 60
  banner_mask_alpha: 0.3
  subtitle: '学而不思则罔，思而不学则殆 —— 孔子'

  # 分类的排序字段，前面带减号是倒序，不带减号是正序
  # Options: length | name
  order_by: "name"

  # 层级的折叠深度，0 是全部折叠，大于 0 后如果存在子分类则默认展开
  collapse_depth: 0

  # 文章的排序字段，前面带减号是倒序，不带减号是正序
  # Options: date | title | or other field of front-matter
  post_order_by: "-date"

  # 单个分类中折叠展示文章数的最大值，超过限制会显示 More，0 则不限制
  post_limit: 10


#---------------------------
# 标签页
# Tag Page
#---------------------------
tag:
  enable: true
  banner_img: https://img.xue65535.cn/img/2022/01/22/19b1f707877b031a553bd877739cfda4-9b548275.jpeg
  banner_img_height: 80
  banner_mask_alpha: 0.3
  subtitle: '博观而约取，厚积而薄发 —— 苏轼'
  tags_subtitle: {
    "基础": "九层之台，起于垒土 —— 老子",
    "并发编程": "不仅要追求效率，还要遵守秩序",
    "JVM": "虽说我叫Virtual Machine，但我一直在你身边",
    "框架": "站在巨人的肩上，才能攀得更高",
    "数据库": "游荡在外的data啊，这里是你们永远的家",
    "分布式": "分开，是为了更好的在一起",
    "工具": "工欲善其事，必先利其器",
    "内功": "清幽现云山，虚静出内功"
  }
  tagcloud:
    min_font: 15
    max_font: 30
    unit: px
    start_color: "#BBBBEE"
    end_color: "#337ab7"


#---------------------------
# 关于页
# About Page
#---------------------------
about:
  enable: true
  banner_img: https://img.xue65535.cn/img/2022/01/22/ed5463a3732e7542fa054f8ebbb1a618-54b220e8.jpeg
  banner_img_height: 60
  banner_mask_alpha: 0.3
  subtitle: '世上哪有什么一蹴而就的事，有的只是百炼成钢，水到渠成'
  avatar: https://img.xue65535.cn/img/2022/01/22/15dc0c7f83f8d8e73c8c7a8c693ef636-0f0b91ba.jpg
  name: "xue"
  intro: " 键落惊风雨，码成泣鬼神。"
  # 更多图标可从 https://hexo.fluid-dev.com/docs/icon/ 查找，`class` 代表图标的 css class，添加 `qrcode` 后，图标不再是链接而是悬浮二维码
  icons:
    - { class: "iconfont icon-github-fill", link: "https://github.com/askxue", tip: "GitHub" }
    - { class: "iconfont icon-wechat-fill", qrcode: "https://img.xue65535.cn/img/2022/01/22/5fb5da8f0a2b7729d97e247cc87bcb03-f57a8fc5.png" }


#---------------------------
# 自定义页
# Custom Page
#
# 通过 hexo new page 命令创建的页面
#---------------------------
page:
  banner_img: https://img.xue65535.cn/img/2022/01/22/4b8d15826e4a9151d8095504f2f8ce46-18cf70f6.jpeg
  banner_img_height: 60
  banner_mask_alpha: 0.3


#---------------------------
# 404页
#---------------------------
page404:
  enable: true
  banner_img: https://img.xue65535.cn/img/2022/01/22/b17dd0115c401cc8b19ad0d4c92fd5ab-e51f38c5.jpeg
  banner_img_height: 85
  banner_mask_alpha: 0.3
  subtitle: "Sorry!地球上已经找不到你想要的页面了..."


#---------------------------
# 友链页
# Links Page
#---------------------------
links:
  enable: false
  banner_img: /img/default.png
  banner_img_height: 60
  banner_mask_alpha: 0.3
  subtitle:
  # 友链的成员项
  items:
    - {
      title: "Fluid Blog",
      intro: "主题博客",
      link: "https://hexo.fluid-dev.com/",
      avatar: "/img/favicon.png"
    }
    - {
      title: "Fluid Docs",
      intro: "主题使用指南",
      link: "https://hexo.fluid-dev.com/docs/",
      avatar: "/img/favicon.png"
    }
    - {
      title: "Fluid Repo",
      intro: "主题 GitHub 仓库",
      link: "https://github.com/fluid-dev/hexo-theme-fluid",
      avatar: "/img/favicon.png"
    }

  # 当成员头像加载失败时，替换为指定图片
  onerror_avatar: https://img.xue65535.cn/img/2022/01/22/cae4b44c74a4d3c89c2c286c17dade53-0a1c25ac.jpg

  # 友链下方自定义区域，支持 HTML，可插入例如申请友链的文字
  custom:
    enable: false
    content: '<hr><p>在下方留言申请加入我的友链，按如下格式提供信息：</p><ul><li>博客名：Fluid</li><li>简介：Fluid 主题官方博客</li><li>链接：https://hexo.fluid-dev.com</li><li>图片：https://hexo.fluid-dev.com/img/favicon.png</li></ul>'

  # 评论插件
  # Comment plugin
  comments:
    enable: false
    # 指定的插件，需要同时设置对应插件的必要参数
    # Options: utterances | disqus | gitalk | valine | waline | changyan | livere | remark42 | twikoo | cusdis
    type: disqus


#---------------------------
# 以下是配置 JS CSS 等静态资源的 URL 前缀，可以自定义成 CDN 地址，
# 默认的 jsDelivr CDN 可能在部分地区无法访问，如果需要修改，最好使用与默认配置相同的版本，以避免潜在的问题，
# ** 如果你不知道如何设置，请不要做任何改动 **
#---------------------------

static_prefix:
  # 内部静态
  internal_js: /js
  internal_css: /css
  internal_img: /img

  anchor: https://cdn.jsdelivr.net/npm/anchor-js@4/

  github_markdown: https://cdn.jsdelivr.net/npm/github-markdown-css@4/

  jquery: https://cdn.jsdelivr.net/npm/jquery@3/dist/

  bootstrap: https://cdn.jsdelivr.net/npm/bootstrap@4/dist/

  highlightjs: https://cdn.jsdelivr.net/npm/highlight.js@10/

  prismjs: https://cdn.jsdelivr.net/npm/prismjs@1/

  tocbot: https://cdn.jsdelivr.net/npm/tocbot@4/dist/

  typed: https://cdn.jsdelivr.net/npm/typed.js@2/lib/

  fancybox: https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@3/dist/

  nprogress: https://cdn.jsdelivr.net/npm/nprogress@0/

  mathjax: https://cdn.jsdelivr.net/npm/mathjax@3/es5/

  katex: https://cdn.jsdelivr.net/npm/katex@0/dist/

  busuanzi: https://busuanzi.ibruce.info/busuanzi/2.3/

  clipboard: https://cdn.jsdelivr.net/npm/clipboard@2/dist/

  mermaid: https://cdn.jsdelivr.net/npm/mermaid@8/dist/

  valine: https://cdn.jsdelivr.net/npm/valine@1/dist/

  waline: https://cdn.jsdelivr.net/npm/@waline/client@1/dist/

  gitalk: https://cdn.jsdelivr.net/npm/gitalk@1/dist/

  disqusjs: https://cdn.jsdelivr.net/npm/disqusjs@1/dist/

  twikoo: https://cdn.jsdelivr.net/npm/twikoo@1/dist/

  hint: /lib/hint/
